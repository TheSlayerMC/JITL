public net.minecraft.world.entity.Entity portalEntrancePos
public net.minecraft.world.entity.Entity getRelativePortalPosition(Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3;
public net.minecraft.world.entity.vehicle.Boat getRelativePortalPosition(Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3;
public net.minecraft.world.entity.vehicle.AbstractMinecart getRelativePortalPosition(Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3;
public net.minecraft.world.entity.LivingEntity getRelativePortalPosition(Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3;
public net.minecraft.client.renderer.LevelRenderer skyBuffer
public net.minecraft.client.renderer.LevelRenderer darkBuffer
public-f net.minecraft.world.BossEvent id
public net.minecraft.world.entity.projectile.AbstractArrow baseDamage
public net.minecraft.world.entity.projectile.AbstractArrow isInGround()Z # isInGround
public-f net.minecraft.world.level.block.entity.ChestBlockEntity items
public net.minecraft.client.multiplayer.ClientLevel getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter;
public net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType <init>(Lcom/mojang/serialization/MapCodec;)V
public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/MapCodec;)V

public net.minecraft.client.renderer.CloudRenderer vertexBuffer # vertexBuffer
public net.minecraft.client.renderer.CloudRenderer prevRelativeCameraPos # prevRelativeCameraPos
public net.minecraft.client.renderer.CloudRenderer prevRelativeCameraPos # prevRelativeCameraPos
public net.minecraft.client.renderer.CloudRenderer$RelativeCameraPos
public net.minecraft.client.renderer.CloudRenderer drawWithRenderType(Lnet/minecraft/client/renderer/RenderType;Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;FFF)V # drawWithRenderType
public net.minecraft.client.renderer.CloudRenderer render(ILnet/minecraft/client/CloudStatus;FLorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lnet/minecraft/world/phys/Vec3;F)V # render
public net.minecraft.client.renderer.CloudRenderer buildMesh(Lcom/mojang/blaze3d/vertex/Tesselator;IILnet/minecraft/client/CloudStatus;Lnet/minecraft/client/renderer/CloudRenderer$RelativeCameraPos;Lcom/mojang/blaze3d/pipeline/RenderPipeline;)Lcom/mojang/blaze3d/vertex/MeshData; # buildMesh
public net.minecraft.client.renderer.CloudRenderer buildMesh(Lnet/minecraft/client/renderer/CloudRenderer$RelativeCameraPos;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIZ)V # buildMesh
public net.minecraft.client.renderer.CloudRenderer draw(Lcom/mojang/blaze3d/pipeline/RenderPipeline;FFF)V # draw
public net.minecraft.client.renderer.CloudRenderer needsRebuild # needsRebuild
public net.minecraft.client.renderer.CloudRenderer prevCellX # prevCellX
public net.minecraft.client.renderer.CloudRenderer prevCellZ # prevCellZ
public net.minecraft.client.renderer.CloudRenderer prevType # prevType
public net.minecraft.client.renderer.CloudRenderer texture # texture
public net.minecraft.client.renderer.CloudRenderer vertexBufferEmpty # vertexBufferEmpty
public-f net.minecraft.client.renderer.CloudRenderer TEXTURE_LOCATION # TEXTURE_LOCATION
public net.minecraft.client.renderer.CloudRenderer packCellData(IZZZZ)J # packCellData
public net.minecraft.client.renderer.CloudRenderer isCellEmpty(I)Z # isCellEmpty
public net.minecraft.client.renderer.CloudRenderer LOGGER # LOGGER
public net.minecraft.client.renderer.CloudRenderer indexCount # indexCount
